---
# first flannel install then calico, makes canal
- name: enable forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    sysctl_set: yes
    reload: yes
    state: present

- name: getting the binaries
  unarchive: src="http://{{ hostvars[groups['managers'][0]]['ansible_hostname'] }}/flannel/{{ flannel_version }}/flannel-{{ flannel_version }}-linux-amd64.tar.gz" dest=/usr/bin copy=no owner=root

- name: docker additional service dir
  file: path=/etc/systemd/system/docker.service.d state=directory

- name: set service file
  template: src=flannel.service.j2 dest=/usr/lib/systemd/system/flannel.service

- name: set sysconfig
  template: src=sysconfig.j2 dest=/etc/sysconfig/flannel

- name: copy flannel docker config
  copy: src=40-flannel.conf dest=/etc/systemd/system/docker.service.d/40-flannel.conf
  notify: 
    - restart docker

- name: create folders
  file: path={{ item }} state=directory
  with_items:
    - /etc/kubernetes
    - /etc/kubernetes/cni
    - /etc/kubernetes/cni/net.d
    - /etc/cni/net.d
    - /var/run/calico
    - /opt/cni
    - /opt/cni/bin

- name: copy docker opts file
  copy: src=docker_opts_cni.env dest=/etc/cni/net.d/docker_opts_cni.env

- name: copy flannel.conf file
  copy: src=10-flannel.conf dest=/etc/cni/net.d/10-flannel.conf

- name: set network for flannel
  shell: "/bin/docker exec -i $(docker ps -q --filter label=io.kubernetes.container.name=etcd) etcdctl --endpoints=https://172.16.50.11:2379 --ca-file=/etc/kubernetes/ssl/ca.pem set /coreos.com/network/config '{ \"Network\": \"10.1.0.0/16\" }'"
  args:
    executable: /bin/bash
  when: "ansible_hostname == hostvars[groups['managers'][0]]['ansible_hostname']"

- name: start and enable service
  service: name=flannel enabled=yes state=started


- name: copy canal.yaml to host
  template: src=canal.yaml.j2 dest=/root/canal.yaml
  when: "ansible_hostname == hostvars[groups['managers'][0]]['ansible_hostname']"

- wait_for:
    host: "{{ ansible_enp0s8.ipv4.address }}"
    port: 443
  when: "ansible_hostname == hostvars[groups['managers'][0]]['ansible_hostname']"

- name: setup canal
  shell: "/bin/docker run --rm -i -v /etc/kubernetes/ssl:/etc/kubernetes/ssl:ro -v /root:/mount manager1:5000/gcr.io/google_containers/hyperkube-amd64:{{ kubernetes_version }} /hyperkube kubectl --server https://{{ ansible_enp0s8.ipv4.address }} --certificate-authority=/etc/kubernetes/ssl/ca.pem --client-certificate=/etc/kubernetes/ssl/host.pem --client-key=/etc/kubernetes/ssl/host-key.pem apply -f /mount/canal.yaml"
  args:
    executable: /bin/bash
  when: "ansible_hostname == hostvars[groups['managers'][0]]['ansible_hostname']"

- name: triggering handlers
  meta: flush_handlers

