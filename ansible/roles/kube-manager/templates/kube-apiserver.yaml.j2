apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: {{ hostvars[groups['managers'][0]]['ansible_hostname'] }}:5000/gcr.io/google_containers/hyperkube-amd64:{{ kubernetes_version }}
    command:
    - /hyperkube
    - apiserver
    - --admission-control=AlwaysAdmit,ServiceAccount
    - --advertise-address={{ ipv4address }}
    - --allow-privileged=true
    - --anonymous-auth=true
    - --apiserver-count={{ groups['managers'] | length }}
    - --authorization-mode=AlwaysAllow
    - --bind-address={{ ipv4address }}
    - --enable-swagger-ui=true
    - --etcd-cafile=/etc/kubernetes/ssl/ca.pem
    - --etcd-servers=https://{{ groups['managers'] | map('extract', hostvars, ['ansible_enp0s8', 'ipv4', 'address']) | join(':2379,https://') }}:2379
    - --insecure-port=8080
    - --kubelet-certificate-authority=/etc/kubernetes/ssl/ca.pem
    - --secure-port=443
    - --service-account-key-file=/etc/kubernetes/ssl/host-{{ ansible_hostname }}-key.pem
    - --service-cluster-ip-range={{ SERVICE_IP_RANGE }}
    - --tls-cert-file=/etc/kubernetes/ssl/host-{{ ansible_hostname }}.pem
    - --tls-private-key-file=/etc/kubernetes/ssl/host-{{ ansible_hostname }}-key.pem
    - --v={{ loglevel }} 
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        port: 8080
        path: /healthz
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    volumeMounts:
    - mountPath: /etc/kubernetes/ssl
      name: ssl-certs-kubernetes
      readOnly: true
    - mountPath: /etc/ssl/certs
      name: ssl-certs-host
      readOnly: true
  volumes:
  - hostPath:
      path: /etc/kubernetes/ssl
    name: ssl-certs-kubernetes
  - hostPath:
      path: /usr/share/ca-certificates
    name: ssl-certs-host